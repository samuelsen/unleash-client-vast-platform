Class {
	#name : 'Feature',
	#superclass : 'Object',
	#instVars : [
		'name',
		'type',
		'enabled',
		'stale',
		'strategy',
		'strategies',
		'parameters'
	],
	#category : 'UnleashFeatures'
}

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Feature class >> _PRAGMA_IS_ [

	"%%PRAGMA DECLARE
	(name: IS_Feature isPool: true isConstant: false)
	(pool: IS_Feature declarations: (
		(name: IS_type isConstant: false)
		(name: IS_name isConstant: false)
		(name: IS_enabled isConstant: false)
		(name: IS_stale isConstant: false)
		(name: IS_parameters isConstant: false)
		(name: IS_strategy isConstant: false)
		(name: IS_instanceInterfaceSpec isConstant: false)
	))"
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Feature class >> abtPrimFlushInterfaceSpecCache [

	IS_Feature associationsDo: [: poolDictionaryAssoc | poolDictionaryAssoc value: nil].
	super abtPrimFlushInterfaceSpecCache
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Feature class >> IS_enabled [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_Feature::IS_enabled notNil
		ifTrue: [IS_Feature::IS_enabled]
		ifFalse: [
		IS_Feature::IS_enabled := (AbtAttributeSpec new
		 attributeType: Boolean;
		 setSelector: #enabled:;
		 getSelector: #enabled;
		 changeSymbol: #enabled)]
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Feature class >> IS_instanceInterfaceSpec [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_Feature::IS_instanceInterfaceSpec notNil
		ifTrue: [IS_Feature::IS_instanceInterfaceSpec]
		ifFalse: [
		IS_Feature::IS_instanceInterfaceSpec := AbtInterfaceSpec new
		featureNamed: #type put: self IS_type;
		featureNamed: #name put: self IS_name;
		featureNamed: #enabled put: self IS_enabled;
		featureNamed: #stale put: self IS_stale;
		featureNamed: #parameters put: self IS_parameters;
		featureNamed: #strategy put: self IS_strategy]
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Feature class >> IS_name [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_Feature::IS_name notNil
		ifTrue: [IS_Feature::IS_name]
		ifFalse: [
		IS_Feature::IS_name := (AbtAttributeSpec new
		 attributeType: String;
		 setSelector: #name:;
		 getSelector: #name;
		 changeSymbol: #name)]
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Feature class >> IS_parameters [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_Feature::IS_parameters notNil
		ifTrue: [IS_Feature::IS_parameters]
		ifFalse: [
		IS_Feature::IS_parameters := (AbtAttributeSpec new
		 attributeType: Parameter;
		 setSelector: #parameters:;
		 getSelector: #parameters;
		 changeSymbol: #parameters)]
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Feature class >> IS_stale [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_Feature::IS_stale notNil
		ifTrue: [IS_Feature::IS_stale]
		ifFalse: [
		IS_Feature::IS_stale := (AbtAttributeSpec new
		 attributeType: Boolean;
		 setSelector: #stale:;
		 getSelector: #stale;
		 changeSymbol: #stale)]
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Feature class >> IS_strategy [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_Feature::IS_strategy notNil
		ifTrue: [IS_Feature::IS_strategy]
		ifFalse: [
		IS_Feature::IS_strategy := (AbtAttributeSpec new
		 attributeType: Strategy;
		 setSelector: #strategy:;
		 getSelector: #strategy;
		 changeSymbol: #strategy)]
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Feature class >> IS_type [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_Feature::IS_type notNil
		ifTrue: [IS_Feature::IS_type]
		ifFalse: [
		IS_Feature::IS_type := (AbtAttributeSpec new
		 attributeType: String;
		 setSelector: #type:;
		 getSelector: #type;
		 changeSymbol: #type)]
]

{ #category : 'IS_generated' }
Feature class >> neoJsonMapping: neoJsonReader [
	
		^neoJsonReader 
			for: self 
			do: [:m | |insts|
				 insts := ((self instVarNames) select: [:inst | (inst = 'strategies' or: [inst = 'parameters' or: [inst = 'strategy']]) not]).
				 m mapInstVars: insts.
				 (m mapInstVar: #parameters) valueSchema: ParameterList.
				 (m mapInstVar: #strategies) valueSchema: StrategyList]
]

{ #category : 'Accessors' }
Feature >> enabled [
	"Return the value of enabled."

	^enabled
]

{ #category : 'Accessors' }
Feature >> enabled: aBoolean [
	"Save the value of enabled."

	enabled := aBoolean.
	self signalEvent: #enabled
		 with: aBoolean.
]

{ #category : 'Accessors' }
Feature >> name [
	"Return the value of name."

	^name
]

{ #category : 'Accessors' }
Feature >> name: aString [
	"Save the value of name."

	name := aString.
	self signalEvent: #name
		 with: aString.
]

{ #category : 'Accessors' }
Feature >> parameters [
	"Return the value of parameters."

	^parameters
]

{ #category : 'Accessors' }
Feature >> parameters: aParameter [
	"Save the value of parameters."

	parameters := aParameter.
	self signalEvent: #parameters
		 with: aParameter.
]

{ #category : 'Accessors' }
Feature >> stale [
	"Return the value of stale."

	^stale
]

{ #category : 'Accessors' }
Feature >> stale: aBoolean [
	"Save the value of stale."

	stale := aBoolean.
	self signalEvent: #stale
		 with: aBoolean.
]

{ #category : 'Accessors' }
Feature >> strategies [
	"Return the value of strategies."

	^strategies
]

{ #category : 'Accessors' }
Feature >> strategies: anOrderedCollection [
	"Save the value of strategies."

	strategies := anOrderedCollection.
	self signalEvent: #strategies
		 with: anOrderedCollection.
]

{ #category : 'Accessors' }
Feature >> strategy [
	"Return the value of strategy."

	^strategy
]

{ #category : 'Accessors' }
Feature >> strategy: aStrategy [
	"Save the value of strategy."

	strategy := aStrategy.
	self signalEvent: #strategy
		 with: aStrategy.
]

{ #category : 'Accessors' }
Feature >> type [
	"Return the value of type."

	^type
]

{ #category : 'Accessors' }
Feature >> type: aString [
	"Save the value of type."

	type := aString.
	self signalEvent: #type
		 with: aString.
]
