Class {
	#name : 'Parameter',
	#superclass : 'Object',
	#instVars : [
		'rollout',
		'groupId',
		'percentage',
		'stickiness',
		'userIds'
	],
	#category : 'UnleashFeatures'
}

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Parameter class >> _PRAGMA_IS_ [

	"%%PRAGMA DECLARE
	(name: IS_Parameter isPool: true isConstant: false)
	(pool: IS_Parameter declarations: (
		(name: IS_userIdList isConstant: false)
		(name: IS_percentage isConstant: false)
		(name: IS_instanceInterfaceSpec isConstant: false)
	))"
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Parameter class >> abtPrimFlushInterfaceSpecCache [

	IS_Parameter associationsDo: [: poolDictionaryAssoc | poolDictionaryAssoc value: nil].
	super abtPrimFlushInterfaceSpecCache
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Parameter class >> IS_instanceInterfaceSpec [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_Parameter::IS_instanceInterfaceSpec notNil
		ifTrue: [IS_Parameter::IS_instanceInterfaceSpec]
		ifFalse: [
		IS_Parameter::IS_instanceInterfaceSpec := AbtInterfaceSpec new
		featureNamed: #userIdList put: self IS_userIdList;
		featureNamed: #percentage put: self IS_percentage]
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Parameter class >> IS_percentage [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_Parameter::IS_percentage notNil
		ifTrue: [IS_Parameter::IS_percentage]
		ifFalse: [
		IS_Parameter::IS_percentage := (AbtAttributeSpec new
		 attributeType: Float;
		 setSelector: #percentage:;
		 getSelector: #percentage;
		 changeSymbol: #percentage)]
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Parameter class >> IS_userIdList [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_Parameter::IS_userIdList notNil
		ifTrue: [IS_Parameter::IS_userIdList]
		ifFalse: [
		IS_Parameter::IS_userIdList := (AbtAttributeSpec new
		 attributeType: OrderedCollection;
		 setSelector: #userIdList:;
		 getSelector: #userIdList;
		 changeSymbol: #userIdList)]
]

{ #category : 'Not categorized' }
Parameter class >> neoJsonMapping: neoJsonReader [
	
		^neoJsonReader 
			for: self 
			do: [:m | m mapInstVars: self instVarNames.].
]

{ #category : 'Accessors' }
Parameter >> groupId [
	"Return the value of groupId."

	^groupId
]

{ #category : 'Accessors' }
Parameter >> groupId: aString [
	"Save the value of groupId."

	groupId := aString.
	self signalEvent: #groupId
		 with: aString.
]

{ #category : 'Accessors' }
Parameter >> percentage [
	"Return the value of percentage."

	^percentage
]

{ #category : 'Accessors' }
Parameter >> percentage: aFloat [
	"Save the value of percentage."

	percentage := aFloat.
	self signalEvent: #percentage
		 with: aFloat.
]

{ #category : 'Accessors' }
Parameter >> rollout [
	"Return the value of rollout."

	^rollout
]

{ #category : 'Accessors' }
Parameter >> rollout: aNumber [
	"Save the value of rollout."

	rollout := aNumber.
	self signalEvent: #rollout
		 with: aNumber.
]

{ #category : 'Accessors' }
Parameter >> stickiness [
	"Return the value of stickiness."

	^stickiness
]

{ #category : 'Accessors' }
Parameter >> stickiness: aString [
	"Save the value of stickiness."

	stickiness := aString.
	self signalEvent: #stickiness
		 with: aString.
]

{ #category : 'Accessors' }
Parameter >> userIds [
	"Return the value of userIds."

	^userIds
]

{ #category : 'Accessors' }
Parameter >> userIds: aString [
	"Save the value of userIds."

	userIds := aString.
	self signalEvent: #userIds
		 with: aString.
]
