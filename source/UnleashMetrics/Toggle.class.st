Class {
	#name : 'Toggle',
	#superclass : 'Object',
	#instVars : [
		'no',
		'yes'
	],
	#category : 'UnleashMetrics'
}

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Toggle class >> _PRAGMA_IS_ [

	"%%PRAGMA DECLARE
	(name: IS_Toggle isPool: true isConstant: false)
	(pool: IS_Toggle declarations: (
		(name: IS_yes isConstant: false)
		(name: IS_no isConstant: false)
		(name: IS_instanceInterfaceSpec isConstant: false)
	))"
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Toggle class >> abtPrimFlushInterfaceSpecCache [

	IS_Toggle associationsDo: [: poolDictionaryAssoc | poolDictionaryAssoc value: nil].
	super abtPrimFlushInterfaceSpecCache
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Toggle class >> IS_instanceInterfaceSpec [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_Toggle::IS_instanceInterfaceSpec notNil
		ifTrue: [IS_Toggle::IS_instanceInterfaceSpec]
		ifFalse: [
		IS_Toggle::IS_instanceInterfaceSpec := AbtInterfaceSpec new
		featureNamed: #yes put: self IS_yes;
		featureNamed: #no put: self IS_no]
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Toggle class >> IS_no [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_Toggle::IS_no notNil
		ifTrue: [IS_Toggle::IS_no]
		ifFalse: [
		IS_Toggle::IS_no := (AbtAttributeSpec new
		 attributeType: Object;
		 setSelector: #no:;
		 getSelector: #no;
		 changeSymbol: #no)]
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
Toggle class >> IS_yes [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_Toggle::IS_yes notNil
		ifTrue: [IS_Toggle::IS_yes]
		ifFalse: [
		IS_Toggle::IS_yes := (AbtAttributeSpec new
		 attributeType: Object;
		 setSelector: #yes:;
		 getSelector: #yes;
		 changeSymbol: #yes)]
]

{ #category : 'Accessors' }
Toggle >> no [
	"Return the value of no."

	^no
]

{ #category : 'Accessors' }
Toggle >> no: anObject [
	"Save the value of no."

	no := anObject.
	self signalEvent: #no
		 with: anObject.
]

{ #category : 'Accessors' }
Toggle >> yes [
	"Return the value of yes."

	^yes
]

{ #category : 'Accessors' }
Toggle >> yes: anObject [
	"Save the value of yes."

	yes := anObject.
	self signalEvent: #yes
		 with: anObject.
]
